syntax = "proto3";

// Area credential API
package area.credential;

// Imports
import "google/protobuf/empty.proto";

// Options
option go_package = "./";

enum Service {
  GITHUB = 0;
  GOOGLE = 1;
  SCALEWAY = 2;
  COIN_MARKET = 3;
  DOCKER = 4;
  ONE_DRIVE = 5;
  NOTION = 6;
}

// Storage is a box that store any kind of credential
message Storage {
  string owner = 1;
  repeated Credential credentials = 2;
}

// Credential is a key/value store
message Credential {
  Service service = 1;
  string token = 2;
}

// Manage credentials
service CredentialService {
  rpc CreateStorage(CreateStorageRequest) returns (Storage);
  rpc DeleteStorage(DeleteStorageRequest) returns (google.protobuf.Empty);
  rpc InsertCredential(InsertCredentialRequest) returns (Storage);
  rpc GetCredential(GetCredentialRequest) returns (Credential);
  rpc UpdateCredential(UpdateCredentialRequest) returns (Credential);
  rpc RemoveCredential(RemoveCredentialRequest) returns (Storage);
}

message CreateStorageRequest {
  string owner = 1;
}

message DeleteStorageRequest {
  string owner = 1;
}

message InsertCredentialRequest {
  string owner = 1;
  Service service = 2;
  string token = 3;
}

message GetCredentialRequest {
  string owner = 1;
  Service service = 2;
}

message UpdateCredentialRequest {
  string owner = 1;
  Service service = 2;
  string token = 3;
}

message RemoveCredentialRequest {
  string owner = 1;
  Service service = 2;
}