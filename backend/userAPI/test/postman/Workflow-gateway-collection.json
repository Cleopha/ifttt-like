{
	"info": {
		"_postman_id": "9df4c4b6-24f0-4a65-958b-c49b37d5be86",
		"name": "Workflow Gateway",
		"description": "Area API to manage users and their workflows",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Flow Workflow",
			"item": [
				{
					"name": "01.Workflow Controller list Workflows - Forbidden",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:userId/workflow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":userId",
								"workflow"
							],
							"variable": [
								{
									"key": "userId",
									"value": "Duis aliq",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:userId/workflow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId",
										"workflow"
									],
									"variable": [
										{
											"key": "userId",
											"value": "Duis aliq",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "02.Auth Controller register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test('Success', function() {",
									"    pm.response.to.have.status(201)",
									"})",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    //parse the response JSON and test three properties",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.expect(responseJson.id).to.be.a('string');",
									"    pm.expect(responseJson.email).to.be.a('string');",
									"    pm.expect(responseJson.password).to.be.a('string');",
									"",
									"    // Set ID for next test :)",
									"    pm.environment.set('id', responseJson.id);",
									"    pm.environment.set('userId', responseJson.id);",
									"    pm.environment.set('email', responseJson.email);",
									"    console.log(pm.environment.get('id'));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('password', pm.variables.replaceIn('{{$randomPassword}}'));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{$randomEmail}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"Duis adipisicing pariatur eu\",\n    \"password\": \"anim E\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "03.Auth Controller login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Success', function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"{{email}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"Duis adipisicing pariatur eu\",\n    \"password\": \"anim E\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"in dolore sed\""
						}
					]
				},
				{
					"name": "04.Workflow Controller create Workflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    //parse the response JSON and test three properties",
									"    const responseJson = pm.response.json();",
									"    const userId = pm.environment.get('userId');",
									"",
									"    pm.expect(responseJson.id).to.be.a('string');",
									"    pm.expect(responseJson.name).to.be.a('string');",
									"    pm.expect(responseJson.owner).to.eq(userId);",
									"",
									"    // Set ID for next test :)",
									"    pm.environment.set('workflowId', responseJson.id);",
									"    console.log(pm.environment.get('workflowId'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test workflow\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{userId}}/workflow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userId}}",
								"workflow"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:userId/workflow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId",
										"workflow"
									],
									"variable": [
										{
											"key": "userId",
											"value": "Duis aliq",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "05.Workflow Controller get Workflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{userId}}/workflow/{{workflowId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userId}}",
								"workflow",
								"{{workflowId}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:userId/workflow/:workflowId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId",
										"workflow",
										":workflowId"
									],
									"variable": [
										{
											"key": "workflowId",
											"value": "Duis aliq",
											"description": "(Required) "
										},
										{
											"key": "userId",
											"value": "Duis aliq",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "06.Workflow Controller update Workflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Updated workflow\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{userId}}/workflow/{{workflowId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userId}}",
								"workflow",
								"{{workflowId}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:userId/workflow/:workflowId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId",
										"workflow",
										":workflowId"
									],
									"variable": [
										{
											"key": "workflowId",
											"value": "Duis aliq",
											"description": "(Required) "
										},
										{
											"key": "userId",
											"value": "Duis aliq",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				},
				{
					"name": "07.Workflow Controller delete Workflow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{userId}}/workflow/{{workflowId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userId}}",
								"workflow",
								"{{workflowId}}"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:userId/workflow/:workflowId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId",
										"workflow",
										":workflowId"
									],
									"variable": [
										{
											"key": "workflowId",
											"value": "Duis aliq",
											"description": "(Required) "
										},
										{
											"key": "userId",
											"value": "Duis aliq",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "08.Workflow Controller list Workflows",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{userId}}/workflow",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{userId}}",
								"workflow"
							]
						}
					},
					"response": [
						{
							"name": "Untitled Example",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:userId/workflow",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":userId",
										"workflow"
									],
									"variable": [
										{
											"key": "userId",
											"value": "Duis aliq",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[]"
						}
					]
				},
				{
					"name": "09.User Controller delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Success', function() {",
									"    pm.response.to.have.status(200)",
									"})",
									"",
									"pm.test(\"The response has all properties\", () => {",
									"    //parse the response JSON and test three properties",
									"    const responseJson = pm.response.json();",
									"",
									"    pm.expect(responseJson.id).to.be.a('string');",
									"    pm.expect(responseJson.email).to.be.a('string');",
									"    pm.expect(responseJson.password).to.be.a('string');",
									"",
									"    pm.expect(responseJson.id).to.eql(pm.environment.get('id'));",
									"    pm.expect(responseJson.email).to.eql(pm.environment.get('email'));",
									"",
									"    pm.environment.set('id', \"\");",
									"    pm.environment.set('email', \"\");",
									"    pm.environment.set('password', \"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{id}}"
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in dolore sed",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			],
			"description": "A gateway to internal microservices to manage workflow and tasks"
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "/",
			"type": "string"
		}
	]
}